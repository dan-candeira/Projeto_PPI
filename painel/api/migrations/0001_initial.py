# Generated by Django 2.2.4 on 2019-12-02 01:53

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Atendente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Siape', models.IntegerField()),
                ('Nome', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Campo', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='StatusSenha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Na fila', max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Senha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senha', models.CharField(max_length=255)),
                ('hora_data', models.DateTimeField(blank=True, default=datetime.datetime(2019, 12, 2, 1, 53, 3, 47179, tzinfo=utc))),
                ('fk_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Categoria')),
                ('fk_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.StatusSenha')),
                ('fk_tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Tipo')),
            ],
        ),
        migrations.CreateModel(
            name='Guiche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_guiche', models.CharField(max_length=10)),
                ('status', models.BooleanField()),
                ('fk_campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Campus')),
            ],
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_data_ini', models.DateTimeField()),
                ('hora_data_fim', models.DateTimeField()),
                ('fk_atendente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Atendente')),
                ('fk_guiche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Guiche')),
                ('fk_senha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Senha')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
